version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.20
  aws-ecr: circleci/aws-ecr@6.7.0
  aws-ecs: circleci/aws-ecs@1.1.0
jobs:
  build:
    working_directory: /app
    docker:
      - image: docker:17.09.0-ce-git
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Set version
          command: |
            export SALEOR_VERSION=$(git rev-parse --short HEAD)
            if [ -n "$CIRCLE_TAG" ]; then
              export SALEOR_VERSION=$(git describe --tags)
            fi
            sed -i.bak "s#'dev'#'$SALEOR_VERSION'#" saleor/__init__.py
      - run:
          name: Build application Docker image
          command: |
            docker build \
              --build-arg STATIC_URL=$STATIC_URL \
              -t mirumee/saleor:latest .
      - run:
          name: Run tests
          command: |
            docker run -d --name db -e POSTGRES_USER=saleor -e POSTGRES_PASSWORD=saleor postgres:12.2-alpine
            docker run --network container:db --rm -e DATABASE_URL mirumee/saleor:latest pytest
          environment:
            DATABASE_URL: postgres://saleor:saleor@localhost:5432/saleor
  ecr-build-push:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          repo: '${APP_NAME}'
          tag: '${CIRCLE_SHA1},latest'
  ecs-deploy:
    docker:
      - image: circleci/python:3.7.1
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - aws-cli/install
      - aws-cli/setup:
          aws-region: AWS_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
      - aws-ecs/update-service:
          family: '${APP_NAME}-bc'
          cluster-name: bc-cluster-sand
          container-image-name-updates: 'container=${APP_NAME}-bc,image-and-tag=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${APP_NAME}:latest'
          verify-revision-is-deployed: true

workflows:
  build-deploy:
    jobs:
      - build:
      - ecr-build-push:
#          context: deploy-env
          filters:
            branches:
              only: master
          requires:
            - build
#      - ecs-deploy:
#          context: deploy-env
#          filters:
#            branches:
#              only: master
#          requires:
#            - ecr-build-push
